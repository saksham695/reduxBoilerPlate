[{"/Users/saksham-vs/reduxBoilerPlate/competition/src/store/StateProvider.js":"1","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/App.js":"2","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/store/reducer.js":"3","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/Card.js":"4","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/TodoTextComponent.js":"5","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/store/action.js":"6","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/InputComponent.js":"7","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/IconComponent.js":"8","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/ListItem.js":"9","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/utilities.js":"10","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/HashTagTextComponent.js":"11"},{"size":464,"mtime":1610131719115,"results":"12","hashOfConfig":"13"},{"size":201,"mtime":1621842495737,"results":"14","hashOfConfig":"15"},{"size":3082,"mtime":1621801999032,"results":"16","hashOfConfig":"15"},{"size":5860,"mtime":1621844185424,"results":"17","hashOfConfig":"15"},{"size":155,"mtime":1621843385303,"results":"18","hashOfConfig":"15"},{"size":392,"mtime":1621796346343,"results":"19","hashOfConfig":"15"},{"size":1040,"mtime":1621843540659,"results":"20","hashOfConfig":"15"},{"size":282,"mtime":1621843551371,"results":"21","hashOfConfig":"15"},{"size":2401,"mtime":1621843997604,"results":"22","hashOfConfig":"15"},{"size":515,"mtime":1621802320012,"results":"23","hashOfConfig":"15"},{"size":513,"mtime":1621843566323,"results":"24","hashOfConfig":"15"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k0p554",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zfizlr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saksham-vs/reduxBoilerPlate/competition/src/store/StateProvider.js",[],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/App.js",[],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/store/reducer.js",[],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/Card.js",["48","49"],"import React, { useState, useEffect } from \"react\";\nimport { uuid } from \"uuidv4\";\n\nimport HashTagTextComponent from \"./HashTagTextComponent\";\nimport IconComponent from \"./IconComponent\";\nimport InputComponent from \"./InputComponent\";\nimport ListItem from \"./ListItem\";\nimport TodoTextComponent from \"./TodoTextComponent\";\nimport { ACTIONS } from \"../store/action\";\nimport { useStateValue } from \"../store/StateProvider\";\n\nimport \"./styles/Card.css\";\n\nexport default function Card() {\n  const [todoItem, onChangeTodo] = useState(\"\");\n  const [hashTag, setHashTag] = useState(\"\");\n  const [\n    {\n      completedTask,\n      hashtagStack,\n      searchedCompletedTask,\n      searchedTodoTask,\n      todoList,\n    },\n    dispatch,\n  ] = useStateValue();\n\n  useEffect(() => {\n    const storedData = sessionStorage.getItem(\"data\");\n    !!storedData &&\n      dispatch({\n        type: ACTIONS.GET_SESSION_DATA,\n        payload: JSON.parse(storedData),\n      });\n  }, []);\n\n  useEffect(() => {\n    const data = {\n      completedTask: [...completedTask],\n      hashtagStack: [...hashtagStack],\n      searchedCompletedTask: [...searchedCompletedTask],\n      searchedTodoTask: [...searchedTodoTask],\n      todoList: [...todoList],\n    };\n    sessionStorage.setItem(\"data\", JSON.stringify(data));\n  }, [completedTask, todoList, searchedCompletedTask, searchedTodoTask]);\n\n  const onTodoItemChange = (e) => {\n    onChangeTodo(e.target.value);\n  };\n\n  // method to add todo to list\n  const addTodoList = (e) => {\n    e.preventDefault();\n    const payload = {\n      completed: false,\n      id: new Date().getTime(),\n      todo: todoItem,\n    };\n    !!todoItem.length &&\n      dispatch({\n        payload,\n        type: ACTIONS.ADD_TO_LIST,\n      });\n    onChangeTodo(\"\");\n  };\n\n  const removeCurrentTask = () => {\n    onChangeTodo(\"\");\n  };\n\n  // method to add hash tag in search stack\n  const onAddHashtagToStack = (e) => {\n    e.preventDefault();\n    !!hashTag.length &&\n      dispatch({\n        type: ACTIONS.ADD_HASHTAG,\n        payload: { tag: hashTag, id: new Date().getTime() },\n      });\n    setHashTag(\"\");\n  };\n\n  const onHashtagChange = (e) => {\n    setHashTag(e.target.value);\n  };\n\n  const onRemoveHashtags = () => {\n    dispatch({\n      type: ACTIONS.REMOVE_HASHTAGS,\n    });\n  };\n  const resetState = () => {\n    dispatch({\n      type: ACTIONS.RESET_TO_DO_LIST,\n    });\n  };\n\n  const renderCardHeader = () => {\n    return (\n      <div className=\"card-header\">\n        <TodoTextComponent\n          text=\"To do list\"\n          customStyle={styles.todoTextStyle}\n        />\n        <div style={styles.resetButtonContainerStyle} onClick={resetState}>\n          <IconComponent\n            customStyle={styles.refreshIconStyle}\n            iconName=\"refresh\"\n          />\n          <TodoTextComponent\n            customStyle={styles.resetButtonTextStyle}\n            text=\"Reset All Tasks\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderInputComponent = () => {\n    return (\n      <>\n        {INPUT_DATA.map(\n          ({\n            key,\n            onHandleChange,\n            onHandleSubmit,\n            onIconClicked,\n            icon,\n            placeholder,\n            type,\n            value,\n          }) => {\n            return (\n              <div key={key} className=\"input-container\">\n                <InputComponent\n                  onHandleChange={onHandleChange}\n                  onHandleSubmit={onHandleSubmit}\n                  placeholder={placeholder}\n                  icon={icon}\n                  type={type}\n                  value={value}\n                  onIconClicked={onIconClicked}\n                />\n              </div>\n            );\n          }\n        )}\n      </>\n    );\n  };\n\n  const INPUT_DATA = [\n    {\n      icon: \"close\",\n      key: \"il1\",\n      onHandleChange: onTodoItemChange,\n      onHandleSubmit: addTodoList,\n      onIconClicked: removeCurrentTask,\n      placeholder: \"+  Add a task\",\n      type: \"input\",\n      value: todoItem,\n    },\n    {\n      icon: \"refresh\",\n      key: \"il2\",\n      onHandleChange: onHashtagChange,\n      onHandleSubmit: onAddHashtagToStack,\n      onIconClicked: onRemoveHashtags,\n      placeholder: \"Search with hashtags\",\n      type: \"input\",\n      value: hashTag,\n    },\n  ];\n\n  return (\n    <div className=\"card-dimension\" style={{ borderRadius: 10 }}>\n      {renderCardHeader()}\n      {renderInputComponent()}\n      {!!hashtagStack.length && (\n        <div className=\"hashtag-container\" style={styles.hashTagContainer}>\n          {hashtagStack.map((item) => {\n            return <HashTagTextComponent text={item.tag} key={uuid()} />;\n          })}\n        </div>\n      )}\n      <div className=\"list-item-container\">\n        {((hashtagStack || []).length ? searchedTodoTask : todoList || []).map(\n          (item) => (\n            <ListItem item={item} key={uuid()} />\n          )\n        )}\n        <TodoTextComponent\n          text=\"Completed\"\n          customStyle={styles.completedTextStyle}\n        />\n        {((hashtagStack || []).length\n          ? searchedCompletedTask\n          : completedTask || []\n        ).map((item) => (\n          <ListItem item={item} key={uuid()} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  resetButtonContainerStyle: {\n    alignItems: \"center\",\n    backgroundColor: \"rgb(232,249,241)\",\n    borderRadius: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"4%\",\n    padding: 10,\n  },\n\n  resetButtonTextStyle: {\n    color: \"rgb(0,204,123)\",\n    marginLeft: 10,\n  },\n\n  refreshIconStyle: {\n    color: \"rgb(0,204,123)\",\n  },\n\n  todoTextStyle: {\n    color: \"rgb(129,129,129)\",\n    fontSize: 22,\n  },\n\n  completedTextStyle: {\n    marginTop: \"2%\",\n  },\n\n  hashTagContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"normal\",\n    marginTop: \"1%\",\n  },\n};\n","/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/TodoTextComponent.js",[],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/store/action.js",[],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/InputComponent.js",[],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/IconComponent.js",[],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/ListItem.js",["50"],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/utilities.js",["51","52"],"/Users/saksham-vs/Documents/todo/reduxBoilerPlate/competition/src/components/HashTagTextComponent.js",[],{"ruleId":"53","severity":1,"message":"54","line":35,"column":6,"nodeType":"55","endLine":35,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":46,"column":6,"nodeType":"55","endLine":46,"endColumn":72,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":79,"column":5,"nodeType":"61","messageId":"62","endLine":79,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":3,"column":23,"nodeType":"65","messageId":"66","endLine":3,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":5,"column":42,"nodeType":"65","messageId":"66","endLine":5,"endColumn":44},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'hashtagStack'. Either include it or remove the dependency array.",["68"],"no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [dispatch]",{"range":"73","text":"74"},"Update the dependencies array to be: [completedTask, todoList, searchedCompletedTask, searchedTodoTask, hashtagStack]",{"range":"75","text":"76"},[959,961],"[dispatch]",[1289,1355],"[completedTask, todoList, searchedCompletedTask, searchedTodoTask, hashtagStack]"]